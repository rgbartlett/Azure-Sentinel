let IgnoreCodes = dynamic(["0", "50074", "500121", "50053", "50126"]);
let Travellers = (SigninLogs
    | extend
        StatusCode = tostring(Status.errorCode),
        StatusDetails = tostring(Status.additionalDetails)
    | where TimeGenerated between(ago(7d) .. ago(1d))
    | where StatusCode == "0"
    | where Location != "GB"
    | where Location != ""
    | distinct UserPrincipalName);
SigninLogs 
| extend
    StatusCode = tostring(Status.errorCode),
    StatusDetails = tostring(Status.additionalDetails)
| extend State = tostring(LocationDetails.state), City = tostring(LocationDetails.city)
| extend Browser = tostring(DeviceDetail.browser)
| extend CondAccPol = tostring(ConditionalAccessPolicies)
| project
    TimeGenerated,
    UserPrincipalName,
    AppDisplayName,
    ResourceDisplayName,
    Browser,
    StatusCode,
    ResultDescription,
    IPAddress,
    Location,
    NetworkLocationDetails,
    CondAccPol
| sort by TimeGenerated
// Include 50074 and 500121 events where Conditional Access is triggered, indicating valid credentials
| where TimeGenerated > ago(4h) and (StatusCode == "50074" or StatusCode == "500121") and CondAccPol != "[]" and Location != "GB"
    // Exclude stuff we don't care about because they're indicative of invalid credentials or successful authentication which has passed MFA.
    or TimeGenerated > ago(4h) and StatusCode !in~ (IgnoreCodes) and UserPrincipalName !in~ (Travellers) and Location != "GB" and NetworkLocationDetails !has "Confirmed UK subnets"